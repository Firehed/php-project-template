name: Build and test

on:
  push:
    branches:
      - main
  pull_request:
    # Run on all PRs

env:
  CI: "true"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      # If you want to use a different registry for your docker image, you will
      # need to customize the registry settings on the next two steps.
      - name: Auth to GH registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build images
        id: build
        uses: firehed/multistage-docker-build-action@v1
        with:
          repository: ghcr.io/${{ github.repository }}
          stages: env, env-with-xdebug, dependencies, dev-dependencies
          testenv-stage: testenv
          server-stage: server

      - name: Prep testenv
        run: |
          env > .env
          mkdir coverage

      - name: PHPUnit
        continue-on-error: true
        uses: firehed/docker-check-action@v1
        with:
          name: PHPUnit
          token: ${{ secrets.GITHUB_TOKEN }}
          image: ${{ steps.build.outputs.testenv-tag }}
          options: --volume ${{ github.workspace }}/coverage:/coverage
          command: vendor/bin/phpunit --coverage-text --coverage-clover /coverage/clover.xml

      - name: PHPStan
        continue-on-error: true
        uses: firehed/docker-check-action@v1
        with:
          name: PHPStan
          token: ${{ secrets.GITHUB_TOKEN }}
          image: ${{ steps.build.outputs.testenv-tag }}
          command: vendor/bin/phpstan analyse --memory-limit=1G --no-progress

      - name: PHPCS
        continue-on-error: true
        uses: firehed/docker-check-action@v1
        with:
          name: PHPCS
          token: ${{ secrets.GITHUB_TOKEN }}
          image: ${{ steps.build.outputs.testenv-tag }}
          command: vendor/bin/phpcs -v

      - name: Upload code coverage
        uses: codecov/codecov-action@v2
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
